au.com.ontheboat.api:
  topyacht:
    url: "http://www.topyacht.com.au/mt/boat_list.php"
    boat-detail: "http://www.topyacht.com.au/mt/mt_pub.php?boid="
    boat-photo: "http://www.topyacht.com.au/mt/mt_photo.php?boid="
  photos:
    path: "/Users/matth/Documents/projects/marina-api/data/photos-png/"
server:
  port: 8081
  servlet:
    context-path: "/api"
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ontheboat
    username: ontheboat
    password: ontheboat
  hibernate:
    dialect: org.hibernate.dialect.PostgreSQLDialect
logging:
  level:
    org:
      springframework:
        security: TRACE
okta.oauth2:
  issuer: https://ontheboat.au.auth0.com/
  client-id: jHQGXEx9RnQ7jmPbi6a8dWY4VkwU7VBP
  clientSecret: BRItcKT2cDbPvMxopK4bb1en4MsRDFcVoU68YKYtBJCvonjqFfI7cCsBXrW074PT
  audience: http://marina-api:8081

#  jpa:
#    generate-ddl: true
#    hibernate:
#      ddl-auto: create

application:
  security:
    jwt:
      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      expiration: 86400000 # a day
      refresh-token:
        expiration: 604800000 # 7 days
jwt:
  private.key: classpath:app.key
  public.key: classpath:app.pub
jakarta:
  persistence:
    schema-generation:
      scripts:
        action: create
        create-source: metadata
javax:
  persistence:
    schema-generation:
      scripts:
        create-target: create.sql
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://ontheboat-postgres:5432/ontheboat
  username: ontheboat
  password: ontheboat
au.com.ontheboat.api:
  photos.path: "/data/photos-combined/"

logging.level:
  org.springframework.security: INFO
okta.oauth2:
  issuer: https://ontheboatp.au.auth0.com/
  client-id: RJosCWS0ud43sUnb6yfcnw7la6EcfOnj
  clientSecret: 1Np0TSceDcayIIuynb3BfVgtyeWwsq7DKn_JgiWn7agixSTpmvX02ZwOP2kMa1b2
  audience: http://marina-api:8081